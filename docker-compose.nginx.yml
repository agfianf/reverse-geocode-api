version: "3.9"
services:
  app-base: &app-base
    build:
      context: .
      dockerfile: Dockerfile.dev
      args:
        USER_UID: ${USER_UID:-1000}
        USER_GID: ${USER_GID:-1000}
    image: ${DOCKER_IMAGE}
    restart: unless-stopped
    env_file:
      - src/app/.env
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-your_redis_password}
      - APP_VERSION=${APP_VERSION:-latest}
      - APP_ENV=${APP_ENV:-dev}
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - reverse-geo
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 5s
      timeout: 3s
      retries: 3

  app1:
    <<: *app-base
    container_name: app1-geo
    ports:
      - 8081:8080

  app2:
    <<: *app-base
    container_name: app2-geo
    ports:
      - 8082:8080

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      app1:
        condition: service_healthy
      app2:
        condition: service_healthy
    networks:
      - reverse-geo

  database:
    platform: "linux/${ARCH:-amd64}"
    image: postgis/postgis:17-master
    container_name: db-geo
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: database_geo
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    networks:
      - reverse-geo
    volumes:
      - data-reverse-geo:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d database_geo"]
      interval: 5s
      timeout: 3s
      retries: 3

  redis:
    container_name: redis
    image: redis:8.0.0-alpine # or 8.0.0
    restart: unless-stopped
    ports:
      - 6379:6379
      # - 8001:8001 # redis gui not supported on alpine
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-your_redis_password}
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD:-your_redis_password}"]
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a ${REDIS_PASSWORD:-your_redis_password} -h localhost -p 6379 ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - reverse-geo

networks:
  reverse-geo:
    driver: bridge

volumes:
  data-reverse-geo:
